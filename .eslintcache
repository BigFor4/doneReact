[{"D:\\speechly_expense_tracker_project-main\\src\\index.js":"1","D:\\speechly_expense_tracker_project-main\\src\\App.js":"2","D:\\speechly_expense_tracker_project-main\\src\\context\\context.js":"3","D:\\speechly_expense_tracker_project-main\\src\\styles.js":"4","D:\\speechly_expense_tracker_project-main\\src\\context\\contextReducer.js":"5","D:\\speechly_expense_tracker_project-main\\src\\components\\index.js":"6","D:\\speechly_expense_tracker_project-main\\src\\components\\InfoCard.jsx":"7","D:\\speechly_expense_tracker_project-main\\src\\components\\Details\\Details.jsx":"8","D:\\speechly_expense_tracker_project-main\\src\\components\\Main\\Main.jsx":"9","D:\\speechly_expense_tracker_project-main\\src\\components\\Snackbar\\Snackbar.jsx":"10","D:\\speechly_expense_tracker_project-main\\src\\components\\Snackbar\\styles.js":"11","D:\\speechly_expense_tracker_project-main\\src\\components\\Main\\List\\List.jsx":"12","D:\\speechly_expense_tracker_project-main\\src\\components\\Main\\styles.js":"13","D:\\speechly_expense_tracker_project-main\\src\\components\\Main\\Form\\Form.jsx":"14","D:\\speechly_expense_tracker_project-main\\src\\components\\Main\\List\\styles.js":"15","D:\\speechly_expense_tracker_project-main\\src\\components\\Main\\Form\\styles.js":"16","D:\\speechly_expense_tracker_project-main\\src\\constants\\categories.js":"17","D:\\speechly_expense_tracker_project-main\\src\\utils\\formatDate.js":"18","D:\\speechly_expense_tracker_project-main\\src\\components\\Details\\styles.js":"19","D:\\speechly_expense_tracker_project-main\\src\\useTransactions.js":"20","D:\\speechly_expense_tracker_project-main\\src\\main.js":"21","D:\\speechly_expense_tracker_project-main\\src\\components\\NotFound\\NotFound.js":"22","D:\\speechly_expense_tracker_project-main\\src\\components\\Login\\Login.js":"23","D:\\speechly_expense_tracker_project-main\\src\\services\\api.js":"24","D:\\speechly_expense_tracker_project-main\\src\\helpers\\StorageUtils.js":"25"},{"size":431,"mtime":1608476407000,"results":"26","hashOfConfig":"27"},{"size":646,"mtime":1646366579007,"results":"28","hashOfConfig":"27"},{"size":2032,"mtime":1608476407000,"results":"29","hashOfConfig":"27"},{"size":582,"mtime":1608476407000,"results":"30","hashOfConfig":"27"},{"size":583,"mtime":1608476407000,"results":"31","hashOfConfig":"27"},{"size":216,"mtime":1608476407000,"results":"32","hashOfConfig":"27"},{"size":460,"mtime":1608476407000,"results":"33","hashOfConfig":"27"},{"size":725,"mtime":1608476407000,"results":"34","hashOfConfig":"27"},{"size":1271,"mtime":1608476407000,"results":"35","hashOfConfig":"27"},{"size":797,"mtime":1608476407000,"results":"36","hashOfConfig":"27"},{"size":206,"mtime":1608476407000,"results":"37","hashOfConfig":"27"},{"size":1403,"mtime":1608476407000,"results":"38","hashOfConfig":"27"},{"size":514,"mtime":1608476407000,"results":"39","hashOfConfig":"27"},{"size":4946,"mtime":1608476407000,"results":"40","hashOfConfig":"27"},{"size":416,"mtime":1608476407000,"results":"41","hashOfConfig":"27"},{"size":247,"mtime":1608476407000,"results":"42","hashOfConfig":"27"},{"size":1693,"mtime":1608476407000,"results":"43","hashOfConfig":"27"},{"size":301,"mtime":1608476407000,"results":"44","hashOfConfig":"27"},{"size":247,"mtime":1608476407000,"results":"45","hashOfConfig":"27"},{"size":1124,"mtime":1608476407000,"results":"46","hashOfConfig":"27"},{"size":1647,"mtime":1646367255615,"results":"47","hashOfConfig":"27"},{"size":759,"mtime":1634524196041,"results":"48","hashOfConfig":"27"},{"size":4228,"mtime":1646366940440,"results":"49","hashOfConfig":"27"},{"size":2702,"mtime":1646366902216,"results":"50","hashOfConfig":"27"},{"size":576,"mtime":1634653831096,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1uv1i5s",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"D:\\speechly_expense_tracker_project-main\\src\\index.js",[],["107","108"],"D:\\speechly_expense_tracker_project-main\\src\\App.js",[],"D:\\speechly_expense_tracker_project-main\\src\\context\\context.js",[],"D:\\speechly_expense_tracker_project-main\\src\\styles.js",[],"D:\\speechly_expense_tracker_project-main\\src\\context\\contextReducer.js",[],"D:\\speechly_expense_tracker_project-main\\src\\components\\index.js",[],"D:\\speechly_expense_tracker_project-main\\src\\components\\InfoCard.jsx",[],"D:\\speechly_expense_tracker_project-main\\src\\components\\Details\\Details.jsx",[],"D:\\speechly_expense_tracker_project-main\\src\\components\\Main\\Main.jsx",["109","110","111"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { Card, CardHeader, CardContent, Typography, Grid, Divider } from '@material-ui/core';\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport { ExpenseTrackerContext } from '../../context/context';\r\nimport useStyles from './styles';\r\nimport Form from './Form/Form';\r\nimport List from './List/List';\r\nimport InfoCard from '../InfoCard';\r\n\r\nconst ExpenseTracker = () => {\r\n  const classes = useStyles();\r\n  const { balance } = useContext(ExpenseTrackerContext);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader title=\"Expense Tracker\" subheader=\"Powered by Speechly\" />\r\n      <CardContent>\r\n        <Typography align=\"center\" variant=\"h5\">Total Balance ${balance}</Typography>\r\n        <Typography variant=\"subtitle1\" style={{ lineHeight: '1.5em', marginTop: '20px' }}>\r\n          <InfoCard />\r\n        </Typography>\r\n        <Divider className={classes.divider} />\r\n        <Form />\r\n      </CardContent>\r\n      <CardContent className={classes.cartContent}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <List />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseTracker;\r\n","D:\\speechly_expense_tracker_project-main\\src\\components\\Snackbar\\Snackbar.jsx",[],"D:\\speechly_expense_tracker_project-main\\src\\components\\Snackbar\\styles.js",[],"D:\\speechly_expense_tracker_project-main\\src\\components\\Main\\List\\List.jsx",[],"D:\\speechly_expense_tracker_project-main\\src\\components\\Main\\styles.js",[],"D:\\speechly_expense_tracker_project-main\\src\\components\\Main\\Form\\Form.jsx",["112"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport Snackbar from '../../Snackbar/Snackbar';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\nimport useStyles from './styles';\r\n\r\nconst initialState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Income',\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst NewTransactionForm = () => {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n\r\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Income' });\r\n    } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Expense' });\r\n    }\r\n\r\n    setOpen(true);\r\n    addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === 'add_expense') {\r\n        setFormData({ ...formData, type: 'Expense' });\r\n      } else if (segment.intent.intent === 'add_income') {\r\n        setFormData({ ...formData, type: 'Income' });\r\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\r\n        return createTransaction();\r\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case 'amount':\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case 'category':\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Income', category });\r\n            } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Expense', category });\r\n            }\r\n            break;\r\n          case 'date':\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n        {segment ? (\r\n        <div className=\"segment\">\r\n          {segment.words.map((w) => w.value).join(\" \")}\r\n        </div>\r\n      ) : null}\r\n         {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={6}>\r\n        <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField fullWidth label=\"Date\" type=\"date\" value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} />\r\n      </Grid>\r\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewTransactionForm;\r\n","D:\\speechly_expense_tracker_project-main\\src\\components\\Main\\List\\styles.js",[],"D:\\speechly_expense_tracker_project-main\\src\\components\\Main\\Form\\styles.js",[],"D:\\speechly_expense_tracker_project-main\\src\\constants\\categories.js",[],"D:\\speechly_expense_tracker_project-main\\src\\utils\\formatDate.js",["113"],"export default (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) { month = `0${month}`; }\r\n  if (day.length < 2) { day = `0${day}`; }\r\n\r\n  return [year, month, day].join('-');\r\n};\r\n","D:\\speechly_expense_tracker_project-main\\src\\components\\Details\\styles.js",[],"D:\\speechly_expense_tracker_project-main\\src\\useTransactions.js",[],"D:\\speechly_expense_tracker_project-main\\src\\main.js",[],"D:\\speechly_expense_tracker_project-main\\src\\components\\NotFound\\NotFound.js",[],"D:\\speechly_expense_tracker_project-main\\src\\components\\Login\\Login.js",[],"D:\\speechly_expense_tracker_project-main\\src\\services\\api.js",["114"],"import axios from 'axios';\nimport StorageUtils from '../helpers/StorageUtils';\n\nconst defaultURL = \"https://demo7405228.mockable.io/\";\n\nconst headers = {\n  'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n  \"Access-Control-Allow-Origin\": \"my-authorized-proxy-or-domain\",\n  \"Access-Control-Allow-Headers\": \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\",\n}\n\nconst create = (baseUrl = null) => {\n  const api = axios.create({\n    baseURL: (baseUrl === null ? defaultURL : baseUrl),\n    timeout: 60000,\n  });\n\n  const sendGet = (path, options = {headers: headers}) => (\n    api.get(path, options)\n      .then((response) => {\n        const { code } = response.data || {};\n        if (code === 503) {\n          throw response;\n        } else {\n          return response;\n        }\n      })\n  );\n\n  const sendPost = (path, params, options = {headers: headers}) => (\n    api.post(path, params, options)\n      .then((res) => {\n        const { code } = res.data || {};\n        if (code === 503) {\n          throw res;\n        } else {\n          return res;\n        }\n      })\n  );\n\n  const sendPut = (path, params, options = {}) => (\n    api.put(path, params, options)\n      .then((res) => {\n        const { code } = res.data || {};\n        if (code === 503) {\n          throw res;\n        } else {\n          return res;\n        }\n      })\n  );\n  \n\n  const generateGet = (path, params = null) => {\n    const options = {\n      headers: {\n        ...headers,\n        Authorization: `Bearer ${StorageUtils.getToken()}`,\n        params,\n      },\n    };\n    return sendGet(path, options);\n  };\n\n  const generatePost = (path, params) => {\n    const options = {\n      headers: {\n        ...headers,\n        Authorization: `Bearer ${StorageUtils.getToken()}`,\n      },\n    };\n    return sendPost(path, params, options);\n  };\n\n  const generatePut = (path, params) => {\n    const options = {\n      headers: {\n        Authorization: `Bearer ${StorageUtils.getToken()}`,\n      },\n    };\n    return sendPut(path, params, options);\n  };\n\n\n    const login = params => generatePost('http://demo4271577.mockable.io/login', params);\n    const getUserInfo = (id) => generateGet(`/userInfo?id=${id}`);\n    const getName = () => generateGet(`/getName`);\n    const fetchListTest1 = (page, perPage) => generateGet(`listExample?page=${page}&perpage=${perPage}`);\n    // const fetchListTest = (page, perPage) => generateGet(`listExample?page=1&perpage=10`);\n    const getListTest = (exercises) => generateGet(`exampleDetail?id=${exercises}`)\n\n  return {\n    login,\n    getUserInfo,\n    getName,\n    fetchListTest1,\n    generatePut,\n    getListTest\n  };\n};\n\nexport default {\n  create,\n};\n\n","D:\\speechly_expense_tracker_project-main\\src\\helpers\\StorageUtils.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":25},{"ruleId":"119","severity":1,"message":"123","line":1,"column":27,"nodeType":"121","messageId":"122","endLine":1,"endColumn":36},{"ruleId":"119","severity":1,"message":"124","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":78,"column":6,"nodeType":"127","endLine":78,"endColumn":15,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":1,"column":1,"nodeType":"131","endLine":11,"endColumn":3},{"ruleId":"129","severity":1,"message":"132","line":103,"column":1,"nodeType":"131","endLine":105,"endColumn":3},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useSpeechContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["135"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"138","text":"139"},[3006,3015],"[createTransaction, formData, segment]"]